{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport __i18nConfig from '@next-translate-root/i18n';\nimport __loadNamespaces from 'next-translate/loadNamespaces';\nimport useTranslation from 'next-translate/useTranslation';\nexport default function Error404() {\n  const {\n    t,\n    lang\n  } = useTranslation();\n  const errorMessage = t`error:404`;\n  console.log({\n    lang\n  });\n  return errorMessage;\n}\nexport async function getStaticProps(ctx) {\n  return {\n    props: _objectSpread({}, await __loadNamespaces(_objectSpread(_objectSpread(_objectSpread({}, ctx), {}, {\n      pathname: '/404',\n      loaderName: 'getStaticProps'\n    }, __i18nConfig), {}, {\n      loadLocaleFrom: (l, n) => import(`@next-translate-root/locales/${l}/${n}`).then(m => m.default)\n    })))\n  };\n}","map":{"version":3,"sources":["/Users/jellebouwman/Development/experiments/next-translate-bug-report/pages/404.js"],"names":["__i18nConfig","__loadNamespaces","useTranslation","Error404","t","lang","errorMessage","console","log","getStaticProps","ctx","props","pathname","loaderName","loadLocaleFrom","l","n","then","m","default"],"mappings":";;;;;;AACI,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEJ,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAcH,cAAc,EAAlC;AACA,QAAMI,YAAY,GAAGF,CAAE,WAAvB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA;AAAF,GAAZ;AAEA,SAAOC,YAAP;AACD;AAGG,OAAO,eAAeG,cAAf,CAA8BC,GAA9B,EAAmC;AAGtC,SAAO;AAELC,IAAAA,KAAK,oBAEC,MAAMV,gBAAgB,+CACrBS,GADqB;AAExBE,MAAAA,QAAQ,EAAE,MAFc;AAGxBC,MAAAA,UAAU,EAAE;AAHY,OAIrBb,YAJqB;AAKxBc,MAAAA,cAAc,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU,OAAQ,gCAA+BD,CAAE,IAAGC,CAAE,EAA9C,EAAiDC,IAAjD,CAAsDC,CAAC,IAAIA,CAAC,CAACC,OAA7D;AALF,OAFvB;AAFA,GAAP;AAaH","sourcesContent":["\n    import __i18nConfig from '@next-translate-root/i18n'\n    import __loadNamespaces from 'next-translate/loadNamespaces'\n    \nimport useTranslation from 'next-translate/useTranslation'\n\nexport default function Error404() {\n  const { t, lang } = useTranslation()\n  const errorMessage = t`error:404`\n\n  console.log({ lang })\n\n  return errorMessage\n}\n\n\n    export async function getStaticProps(ctx) {\n        \n        \n        return {\n          \n          props: {\n            \n            ...(await __loadNamespaces({\n              ...ctx,\n              pathname: '/404',\n              loaderName: 'getStaticProps',\n              ...__i18nConfig,\n              loadLocaleFrom: (l, n) => import(`@next-translate-root/locales/${l}/${n}`).then(m => m.default),\n            }))\n          }\n        }\n    }\n  "]},"metadata":{},"sourceType":"module"}